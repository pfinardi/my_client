#--------------------------------------------
# enabling or adding the needed repositories
- name: enable partner repo
  apt_repository:
    repo: deb http://archive.canonical.com/ubuntu bionic partner
    state: present

- name: add repo numix theme
  apt_repository:
    repo: ppa:numix/ppa
    filename: numix

- name: add repo community theme
  apt_repository:
    repo: ppa:communitheme/ppa
    filename: communitheme

- name: add repo for nextcloud-client
  apt_repository:
    repo: ppa:nextcloud-devs/client
    filename: nextcloud

- name: add repo for Gnome Encfs Manager
  apt_repository:
    repo: ppa:gencfsm/ppa
    filename: gencfsm

- name: Add an Apt signing key for Google Chrome
  apt_key:
    url: https://dl.google.com/linux/linux_signing_key.pub
    state: present

- name: enable chrome repo
  apt_repository:
    repo: deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
    state: present
    filename: google-chrome
    update_cache: yes

- name: Import repo key for Postgresql
  apt_key:
    url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
    state: present

- name: enable postgresql repo (for pgadmin, too)
  apt_repository:
    repo: deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main
    state: present
    filename: pgdg
    update_cache: yes

- name: Add an Apt signing key for Oracle VirtualBox
  apt_key:
    url: https://www.virtualbox.org/download/oracle_vbox_2016.asc -O-
    state: present

- name: enable Oracle VirtualBox repo
  apt_repository:
    repo: deb [arch=amd64] http://download.virtualbox.org/virtualbox/debian bionic contrib
    state: present
    filename: virtualbox
    update_cache: yes

- name: Add an Apt signing key for Typora (markdown editor)
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: BA300B7755AFCFAE
    state: present

- name: enable Typora (markdown editor) repo
  apt_repository:
    repo: deb https://typora.io/linux ./
    state: present
    filename: typora
    update_cache: yes

- name: Add an Apt signing key for Skype
  apt_key:
    url: https://repo.skype.com/data/SKYPE-GPG-KEY
    state: present

- name: enable skype repo
  apt_repository:
    repo: deb [arch=amd64] https://repo.skype.com/deb stable main
    state: present
    filename: skype-stable.list
    update_cache: yes

#------------------------------------
# Post installation suggested
- name: Install Codec, ms fonts, ..
  apt: name=ubuntu-restricted-extras state=latest

- name: video packages
  apt:
    name:
      - libdvd-pkg   
      - libdvdread4
      - python3
    state: latest
    autoclean: yes


- name: reconfigure libdvd
  shell: "dpkg-reconfigure -f noninteractive libdvd-pkg"
  ignore_errors: yes

- name: Install Community Theme
  apt: name=ubuntu-communitheme-session state=latest

#-----------------------------------
# Java

- name: add repo for Oracle Java
  apt_repository:
    repo: ppa:webupd8team/java
    filename: java_oracle

- name: Check if Oracle Java is installed
  command: dpkg -s oracle-java8-set-default
  register: java_install
  ignore_errors: yes

- name: set Oracle Java licence selected
  shell: /bin/echo debconf shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
  when: java_install.rc > 0

- name: set Oracle Java licence seen
  shell: /bin/echo debconf shared/accepted-oracle-license-v1-1 seen true | /usr/bin/debconf-set-selections
  when: java_install.rc > 0

- name: Oracle Java
  apt: name=oracle-java8-set-default state=latest force=yes

#------------------------------------
# Install packages from repo
- name: Install packages
  apt:
    name:
      - cryptsetup
      - keepassx
      - tmux
      - htop
      - gnome-tweak-tool
      - torbrowser-launcher
      - numix-gtk-theme
      - numix-icon-theme-circle
      - nautilus-dropbox
      - nextcloud-client
      - nextcloud-client-nautilus
      - shutter
      - pdfshuffler
      - slack
      - vokoscreen
      - retext
      - telegram-desktop
      - banshee
      - gimp
      - meld
      - nautilus-compare
      - vlc
      - remmina
      - gnome-shell-extensions
      - filezilla
      - google-chrome-stable
      - chrome-gnome-shell
      - imagemagick
      - nautilus-image-converter
      - gdebi
      - net-tools
      - pgadmin3
      - gnome-encfs-manager
      - build-essential
      - dkms
      - unzip
      - wget
      - virtualbox
      - virtualbox-guest-additions-iso
      - pandoc
      - texlive-latex-recommended
      - texlive-xetex
      - texlive-luatex
      - pandoc-citeproc
      - texlive-latex-extra
      - context
      - fonts-symbola
      - gufw
      - typora
      - smbclient
      - network-manager-openvpn
      - network-manager-openvpn-gnome
      - network-manager-vpnc-gnome
      - network-manager-openconnect-gnome
      - xul-ext-lightning
      - printer-driver-cups-pdf
      - gawk
      - translate-shell
      - skypeforlinux
    state: latest
    autoclean: yes


- name: Install to manage Exchange Calendar in Gnome Calendar
  apt: name=evolution-ews state=latest

# Install packages for power management (save battery)
- name: packages for save battery (power management)
  apt:
    name:
      - tlp
      - tlp-rdw
      - powertop
    state: latest
    autoclean: yes



#-------------------------------
# Package from "snap"
- name: install Slack 
  command: snap install slack --classic

- name: install Spotify 
  command: snap install spotify

- name: install Mattermost
  command: snap install mattermost-desktop --beta

#-------------------------------
# Package to download and install

# Barracuda VPN
- name: download "Barracuda VPN" package
  become_user: "{{ main_user }}"
  get_url:
    url: "{{ cloud_url }}/{{ cloud_path1 }}{{ cloud_app1 }}"
    url_username: "{{ cloud_user }}"
    url_password: "{{ cloud_pw }}"
    dest: /home/{{main_user}}/Downloads/{{cloud_app1}}

- name: install "Barracuda VPN"
  apt:
    deb: /home/{{main_user}}/Downloads/{{cloud_app1}}

#!!!!!!!!!!!!!! prendere da backup su HD la configurazione e lo script
#- name: download configurazione per "Barracuda VPN client"
#  get_url:
#    url: "{{ cloud_url }}/{{ cloud_path1 }}barracudavpn.conf"
#    url_username: "{{ cloud_user }}"
#    url_password: "{{ cloud_pw }}"
#    dest: /etc/barracudavpn/barracudavpn.conf
#    owner: root
#    group: "{{ main_user }}"
#    mode: 0620

#- name: download script for "Barracuda VPN"
#  become_user: "{{ main_user }}"
#  get_url:
#    url: "{{ cloud_url }}/{{ cloud_path1 }}vpn-barracuda.sh"
#    url_username: "{{ cloud_user }}"
#    url_password: "{{ cloud_pw }}"
#    dest: /home/{{main_user}}/vpn-barracuda.sh
#    mode: 0700

#!!!!!!!!!!!!!!!!!!!! testare che se la variabile Ã¨ vuota non bisogna fare niente
# SAPGUI for Java
#- name: download "SAPGUI for Java"
#  become_user: "{{ main_user }}"
#  get_url:
#    url: "{{ cloud_url }}/{{ cloud_sappath }}{{ cloud_sapapp }}"
#    url_username: "{{ cloud_user }}"
#    url_password: "{{ cloud_pw }}"
#    dest: /home/{{main_user}}/Downloads/{{cloud_sapapp}}
#  when: cloud_sapapp != 'no'

# IBM iAccess
- name: Install IBMiAccess from backup
  become_user: "{{ main_user }}"
  shell: rsync -avz --ignore-errors --delete-excluded --delete {{rsync_backup_path}}/IBMiAccess_v1r1 /home/{{main_user}}/
  ignore_errors: true

- name: ...and config IBMiAccess
  become_user: "{{ main_user }}"
  shell: rsync -avz --ignore-errors --delete-excluded --delete {{rsync_backup_path}}/IBM /home/{{main_user}}/
  ignore_errors: true

- name: ...again config IBMiAccess
  become_user: "{{ main_user }}"
  shell: rsync -avz --ignore-errors --delete-excluded --delete {{rsync_backup_path}}/.local/share/icons/com-ibm-iaccess-launch-acslaunchpad.png /home/{{main_user}}/.local/share/icons/
  ignore_errors: true

# Pentaho Data Integration (kettle)
- name: Install Pentaho Data Integration (kettle) from backup
  become_user: "{{ main_user }}"
  shell: rsync -avz --ignore-errors --delete-excluded --delete {{rsync_backup_path}}/kettle /home/{{main_user}}/
  ignore_errors: true

- name: kettle Properties from backup
  become_user: "{{ main_user }}"
  shell: rsync -avz --ignore-errors --delete-excluded --delete {{rsync_backup_path}}/.kettle /home/{{main_user}}/
  ignore_errors: true

- name: Install libwebkitgtk-1.0-0 (necessary for PDI)
  apt: name=libwebkitgtk-1.0-0 state=latest



# DBEdit 2
- name: Install DBEdit 2 from backup
  become_user: "{{ main_user }}"
  shell: rsync -avz --ignore-errors --delete-excluded --delete {{rsync_backup_path}}/DBEdit /home/{{main_user}}/
  ignore_errors: true

- name: DBEdit preferences
  become_user: "{{ main_user }}"
  shell: rsync -avz --ignore-errors --delete-excluded --delete {{rsync_backup_path}}/dbedit.xml /home/{{main_user}}/
  ignore_errors: true

- name: DBEdit icons
  become_user: "{{ main_user }}"
  shell: rsync -avz --ignore-errors --delete-excluded --delete {{rsync_backup_path}}/.local/share/icons/dbedit-dbedit.png /home/{{main_user}}/.local/share/icons/
  ignore_errors: true


# PHPStorm
#- name: download "PHPStorm"
#  become_user: "{{ main_user }}"
#  get_url:
#    url: "{{ cloud_url }}/{{ cloud_path4 }}{{ cloud_app4 }}"
#    url_username: "{{ cloud_user }}"
#    url_password: "{{ cloud_pw }}"
#    dest: /home/{{main_user}}/Downloads/{{cloud_app4}}

#- name: Check if directory PhpStorm exists
#  become_user: "{{ main_user }}"
#  stat: path=/home/{{main_user}}/PhpStorm
#  register: check_phpstorm

#- name: Create directory PhpStorm
#  become_user: "{{ main_user }}"
#  file: path=/home/{{main_user}}/PhpStorm
#    state=directory
#    mode=0740
#  when: check_phpstorm.stat.exists == False or check_phpstorm.stat.isdir == False

#- name: PhpStorm - Extract archive
#  unarchive: src=/home/{{main_user}}/Downloads/{{cloud_app4}}
#             dest=/home/{{main_user}}/PhpStorm

#- name: PhpStorm preferences
#  become_user: "{{ main_user }}"
#  shell: rsync -avz --ignore-errors --delete-excluded --delete {{rsync_backup_path}}/.PhpStorm2016.2 /home/{{main_user}}/
#  ignore_errors: true

#- name: PhpStorm - change projects path
#  become_user: "{{ main_user }}"
#  shell: find /home/{{main_user}}/.PhpStorm2016.2 -type f -print0 | xargs -0 sed -i 's/ESC\/PHPStorm/git-repo/g'
#  ignore_errors: true

#!!!!!!!!! aggiungere la parte di kerio (forse)


#-------------------------------
# download from cloud of the ".desktop" files for some applications
- name: download ".desktop" files
  become_user: "{{ main_user }}"
  get_url:
    url: "{{ cloud_url }}/desktop_files/{{item}}.desktop"
    url_username: "{{ cloud_user }}"
    url_password: "{{ cloud_pw }}"
    dest: /home/{{main_user}}/.local/share/applications/
  with_items:
    - dbedit
    - spoon
    - com-ibm-iaccess-launch-acslaunchpad

#-------------------------------
# Packages to remove
- name: remove Gnome Amazon launcher
  apt: name=ubuntu-web-launchers state=absent

- name: remove Deja-Dup
  apt: name=deja-dup state=absent

- name: Rhythmbox
  apt: name=rhythmbox state=absent

#--------------------------------
# Oracle VirualBox
- name: Add the main user to VirtualBox group
  shell: usermod -aG vboxusers {{ main_user }}

#-------------------------------------------
# ...and finally
# Shutter problems: "Edit" are not enabled
- name: Check if libgoocanvas-common is installed
  command: dpkg -s libgoocanvas-common
  register: pk_check1
  ignore_errors: yes

- name: shutter problems - download 1
  become_user: "{{ main_user }}"
  get_url:
    url: https://launchpad.net/ubuntu/+archive/primary/+files/libgoocanvas-common_1.0.0-1_all.deb
    dest: /home/{{main_user}}/Downloads/
  when: pk_check1.rc > 0

- name: Check if libgoocanvas3:amd64 is installed
  command: dpkg -s libgoocanvas3:amd64
  register: pk_check2
  ignore_errors: yes

- name: shutter problems - download 2
  become_user: "{{ main_user }}"
  get_url:
    url: https://launchpad.net/ubuntu/+archive/primary/+files/libgoocanvas3_1.0.0-1_amd64.deb
    dest: /home/{{main_user}}/Downloads/
  when: pk_check2.rc > 0

- name: Check if libgoo-canvas-perl is installed
  command: dpkg -s libgoo-canvas-perl
  register: pk_check3
  ignore_errors: yes

- name: shutter problems - download 3
  become_user: "{{ main_user }}"
  get_url:
    url: https://launchpad.net/ubuntu/+archive/primary/+files/libgoo-canvas-perl_0.06-2ubuntu3_amd64.deb
    dest: /home/{{main_user}}/Downloads/
  when: pk_check3.rc > 0

- name: shutter problems - install package 1
  command: gdebi -n /home/{{main_user}}/Downloads/libgoocanvas-common_1.0.0-1_all.deb
  when: pk_check1.rc > 0

- name: shutter problems - install package 2
  command: gdebi -n /home/{{main_user}}/Downloads/libgoocanvas3_1.0.0-1_amd64.deb
  when: pk_check2.rc > 0

- name: shutter problems - install package 3
  command: gdebi -n /home/{{main_user}}/Downloads/libgoo-canvas-perl_0.06-2ubuntu3_amd64.deb
  when: pk_check3.rc > 0

- name: Install package necessary for some App indicator in tray bar
  apt: name=libappindicator-dev state=latest

#- name: ...then install Gtk2::AppIndicator perl extension for libappindicator for Shutter (otherwise it doeasn't appear in tray bar)
#  command: cpan -i Gtk2::AppIndicator
# non funziona perchÃ¨ chiede una risposta e comunque anche eseguendolo interattivo poi l'icone di Shutter non si vede

