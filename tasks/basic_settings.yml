#-------------------------------------------
# Get SSH Keys from NAS
- name: install sshpass (important to copy ssh id without prompt password)
  apt: name=sshpass state=latest

- name: Check if directory .ssh exists
  become_user: "{{ main_user }}"
  stat: path=/home/{{main_user}}/.ssh
  register: check_sshdir
  
- name: Create directory .ssh
  become_user: "{{ main_user }}"
  file: path=/home/{{main_user}}/.ssh
    state=directory
    mode=0700
  when: check_sshdir.stat.exists == False or check_sshdir.stat.isdir == False

- name: Check if file known_hosts exists
  become_user: "{{ main_user }}"
  stat: path=/home/{{main_user}}/.ssh/known_hosts
  register: check_known_hosts

- name: Create file known_hosts if doesn't exist
  become_user: "{{ main_user }}"
  file: path=/home/{{main_user}}/.ssh/known_hosts
    state=touch
    mode=0644
  when: check_known_hosts.stat.exists == False

- name: For each host, scan for its ssh public key
  shell: "ssh-keyscan {{ item }},`dig +short {{ item }}`"
  with_items: "{{ nas_ip }}"
  register: ssh_known_host_results
  ignore_errors: yes
  when: check_known_hosts.stat.exists == False

- name: Add/update the public key in the '{{ ssh_known_hosts_file }}'
  known_hosts:
    name: "{{ item.item }}"
    key: "{{ item.stdout }}"
    path: "{{ ssh_known_hosts_file }}"
  with_items: "{{ ssh_known_host_results.results }}"
  when: check_known_hosts.stat.exists == False

- name: Check if SSH key exists
  become_user: "{{ main_user }}"
  stat: path=/home/{{main_user}}/.ssh/id_rsa
  register: check_key
  
- name: Copy SSH key on backup server
  become_user: "{{ main_user }}"
  shell: sshpass -p {{nas_password}} scp -P {{nas_ssh_port}} {{nas_user}}@{{nas_ip}}:{{nas_path_backup}}/.ssh/* /home/{{main_user}}/.ssh
  when: check_key.stat.exists == False

#------------------------------------------
# Get Firefox configuration from backup
- name: Get Firefox configuration from backup
  become_user: "{{ main_user }}"
  shell: rsync -avz --ignore-errors --delete-excluded --delete --exclude-from=tasks/rsync_exclude_firefox.txt {{nas_user}}@{{nas_ip}}:{{nas_path_backup}}/.mozilla/firefox /home/{{main_user}}/.mozilla/
  ignore_errors: true
